{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "ChoiceMatrix.svelte",
    "Digit.svelte",
    "Stats.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import ChoiceMatrix from \"./ChoiceMatrix.svelte\";\nimport Digit from \"./Digit.svelte\";\nimport { getChoices, newState, updateDigitSet, updateGte, updateLte, updateOneIs, } from \"./State\";\nimport Stats from \"./Stats.svelte\";\nlet state = newState();\n$: choices = getChoices(state);\nconst resetState = () => (state = newState());\nconst updateOnes = (digits) => (state = updateDigitSet(state, \"ones\", digits));\nconst updateTens = (digits) => (state = updateDigitSet(state, \"tens\", digits));\nconst onGteUpdate = (ev) => (state = updateGte(state, parseInt(ev.target.value)));\nconst onLteUpdate = (ev) => (state = updateLte(state, parseInt(ev.target.value)));\nconst onOneIsUpdate = (ev) => {\n    const oneIs = ev.target.value !== \"\" ? parseInt(ev.target.value) : null;\n    state = updateOneIs(state, oneIs);\n};\n</script>\n\n<style>\n\tmain {\n\t\tmargin: 0 auto;\n\t\tmax-width: 960px;\n\t}\n\n\th1 {\n\t\ttext-align: center;\n\t\tmargin-bottom: 3rem;\n\t}\n\n\t.content {\n\t\tdisplay: flex;\n\t}\n\n\t@media screen and (max-width: 960px) {\n\t\t.content {\n\t\t\tflex-direction: column;\n\t\t}\n\t}\n\n\t.one-is {\n\t\tmargin-bottom: 1rem;\n\t}\n\n\t.between > input,\n\t.one-is > input {\n\t\tdisplay: inline-block;\n\t\tmax-width: 3rem;\n\t\tmax-height: 1.5rem;\n\t}\n\n\t.label,\n\t.constraints-label {\n\t\tfont-weight: bold;\n\t\tmargin-bottom: 0.25rem;\n\t\tmargin-top: 1rem;\n\t}\n\n\t.constraints-label {\n\t\tmargin-top: 0;\n\t}\n\n\t.v-pad {\n\t\tmargin-bottom: 1rem;\n\t}\n\n\t.h-pad {\n\t\tmargin-left: 1rem;\n\t}\n\n\t.reset-btn {\n\t\tmargin-top: 1rem;\n\t}\n</style>\n\n<main>\n\t<h1>FFXI Treasure Chest Helper</h1>\n\t<div class=\"content\">\n\t\t<div>\n\t\t\t<Stats {choices} />\n\t\t\t<div class=\"v-pad\" />\n\t\t\t<ChoiceMatrix {choices} />\n\t\t</div>\n\t\t<div class=\"h-pad\" />\n\t\t<div>\n\t\t\t<div class=\"constraints-label\">Constraints</div>\n\t\t\t<div class=\"between\">\n\t\t\t\tBetween\n\t\t\t\t<input type=\"number\" value={state.gte} on:keyup={onGteUpdate} />\n\t\t\t\tand\n\t\t\t\t<input type=\"number\" value={state.lte} on:keyup={onLteUpdate} />\n\t\t\t</div>\n\t\t\t<div class=\"one-is\">\n\t\t\t\tOne of the digits is\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={state.oneIs || ''}\n\t\t\t\t\ton:keyup={onOneIsUpdate} />\n\t\t\t</div>\n\t\t\t<div class=\"label\">First digit</div>\n\t\t\t<Digit digits={state.tenDigits} updateDigits={updateTens} />\n\t\t\t<div class=\"label\">Second digit</div>\n\t\t\t<Digit digits={state.oneDigits} updateDigits={updateOnes} />\n\t\t\t<button class=\"reset-btn\" on:click={resetState}>Reset</button>\n\t\t</div>\n\t</div>\n</main>\n",
    "<script lang=\"ts\">export let choices;\nlet allChoices = [];\nfor (let i = 0; i < 100; i++) {\n    allChoices.push(i);\n}\n</script>\n\n<style>\n    .matrix {\n        border: 1px solid black;\n        border-radius: 2px;\n        display: flex;\n        flex-wrap: wrap;\n        margin-top: 0.5rem;\n        max-width: 525px;\n        padding: 0.5rem;\n    }\n\n    .choice {\n        flex: 1 0 9%;\n        padding-right: 0.25rem;\n    }\n</style>\n\n<div>\n    <b>Valid choices:</b>\n    <div class=\"matrix\">\n        {#each allChoices as choice}\n            <span class=\"choice\">\n                <input type=\"checkbox\" disabled checked={choices.has(choice)} />\n                {choice}\n            </span>\n        {/each}\n    </div>\n</div>\n",
    "<script lang=\"ts\">export let digits;\nexport let updateDigits;\nconst EVENS = new Set([0, 2, 4, 6, 8]);\nconst ODDS = new Set([1, 3, 5, 7, 9]);\nconst clear = () => updateDigits(new Set());\nconst toggleDigit = (digit) => {\n    const newDigits = new Set(digits);\n    if (newDigits.has(digit)) {\n        newDigits.delete(digit);\n    }\n    else {\n        newDigits.add(digit);\n    }\n    updateDigits(newDigits);\n};\nconst setEvens = () => updateDigits(EVENS);\nconst setOdds = () => updateDigits(ODDS);\nconst allDigits = [];\nfor (let i = 0; i < 10; i++) {\n    allDigits.push(i);\n}\n</script>\n\n<style>\n    .digit {\n        display: inline-block;\n        margin-right: 0.5rem;\n    }\n</style>\n\n<div>\n    {#each allDigits as digit}\n        <div class=\"digit\">\n            <input\n                type=\"checkbox\"\n                on:click={() => toggleDigit(digit)}\n                checked={digits.has(digit)} />\n            {digit}\n        </div>\n    {/each}\n</div>\n\n<div>\n    <button on:click={setEvens}>Even</button>\n    <button on:click={setOdds}>Odd</button>\n    <button on:click={clear}>Clear</button>\n</div>\n",
    "<script lang=\"ts\">export let choices;\nlet median = \"N/A\";\nlet guesses = \"N/A\";\n$: {\n    median = \"N/A\";\n    if (choices.size > 0) {\n        const choiceList = [...choices];\n        choiceList.sort((a, b) => a - b);\n        median = choiceList[Math.floor(choiceList.length / 2)].toString();\n    }\n    guesses = \"N/A\";\n    if (choices.size == 1) {\n        guesses = \"1\";\n    }\n    else if (choices.size > 1) {\n        guesses = Math.ceil(Math.log(choices.size) / Math.log(2)).toString();\n    }\n}\n</script>\n\n<style>\n    .label {\n        display: inline-block;\n        font-weight: bold;\n        min-width: 5rem;\n    }\n</style>\n\n<div>\n    <div><span class=\"label\">Median:</span> {median}</div>\n    <div><span class=\"label\"># Guesses:</span> {guesses}</div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAkBC,IAAI,8BAAC,CAAC,AACL,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,SAAS,CAAE,KAAK,AACjB,CAAC,AAED,EAAE,8BAAC,CAAC,AACH,UAAU,CAAE,MAAM,CAClB,aAAa,CAAE,IAAI,AACpB,CAAC,AAED,QAAQ,8BAAC,CAAC,AACT,OAAO,CAAE,IAAI,AACd,CAAC,AAED,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACrC,QAAQ,8BAAC,CAAC,AACT,cAAc,CAAE,MAAM,AACvB,CAAC,AACF,CAAC,AAED,OAAO,8BAAC,CAAC,AACR,aAAa,CAAE,IAAI,AACpB,CAAC,AAED,uBAAQ,CAAG,oBAAK,CAChB,sBAAO,CAAG,KAAK,eAAC,CAAC,AAChB,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,AACnB,CAAC,AAED,oCAAM,CACN,kBAAkB,8BAAC,CAAC,AACnB,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,OAAO,CACtB,UAAU,CAAE,IAAI,AACjB,CAAC,AAED,kBAAkB,8BAAC,CAAC,AACnB,UAAU,CAAE,CAAC,AACd,CAAC,AAED,MAAM,8BAAC,CAAC,AACP,aAAa,CAAE,IAAI,AACpB,CAAC,AAED,MAAM,8BAAC,CAAC,AACP,WAAW,CAAE,IAAI,AAClB,CAAC,AAED,UAAU,8BAAC,CAAC,AACX,UAAU,CAAE,IAAI,AACjB,CAAC;AC9DE,OAAO,eAAC,CAAC,AACL,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,MAAM,AACnB,CAAC,AAED,OAAO,eAAC,CAAC,AACL,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CACZ,aAAa,CAAE,OAAO,AAC1B,CAAC;ACGD,MAAM,cAAC,CAAC,AACJ,OAAO,CAAE,YAAY,CACrB,YAAY,CAAE,MAAM,AACxB,CAAC;ACND,MAAM,cAAC,CAAC,AACJ,OAAO,CAAE,YAAY,CACrB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AACnB,CAAC"
}